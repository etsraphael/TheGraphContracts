// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class setAccountEvent extends ethereum.Event {
  get params(): setAccountEvent__Params {
    return new setAccountEvent__Params(this);
  }
}

export class setAccountEvent__Params {
  _event: setAccountEvent;

  constructor(event: setAccountEvent) {
    this._event = event;
  }

  get member(): setAccountEventMemberStruct {
    return changetype<setAccountEventMemberStruct>(
      this._event.parameters[0].value.toTuple()
    );
  }
}

export class setAccountEventMemberStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get userName(): string {
    return this[1].toString();
  }
}

export class User__getAccountResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get userName(): string {
    return this[1].toString();
  }
}

export class User extends ethereum.SmartContract {
  static bind(address: Address): User {
    return new User("User", address);
  }

  deleteMyAccount(): boolean {
    let result = super.call("deleteMyAccount", "deleteMyAccount():(bool)", []);

    return result[0].toBoolean();
  }

  try_deleteMyAccount(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "deleteMyAccount",
      "deleteMyAccount():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAccount(): User__getAccountResultValue0Struct {
    let result = super.call(
      "getAccount",
      "getAccount():((address,string))",
      []
    );

    return changetype<User__getAccountResultValue0Struct>(result[0].toTuple());
  }

  try_getAccount(): ethereum.CallResult<User__getAccountResultValue0Struct> {
    let result = super.tryCall(
      "getAccount",
      "getAccount():((address,string))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<User__getAccountResultValue0Struct>(value[0].toTuple())
    );
  }

  setAccount(_userName: string): boolean {
    let result = super.call("setAccount", "setAccount(string):(bool)", [
      ethereum.Value.fromString(_userName)
    ]);

    return result[0].toBoolean();
  }

  try_setAccount(_userName: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("setAccount", "setAccount(string):(bool)", [
      ethereum.Value.fromString(_userName)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class DeleteMyAccountCall extends ethereum.Call {
  get inputs(): DeleteMyAccountCall__Inputs {
    return new DeleteMyAccountCall__Inputs(this);
  }

  get outputs(): DeleteMyAccountCall__Outputs {
    return new DeleteMyAccountCall__Outputs(this);
  }
}

export class DeleteMyAccountCall__Inputs {
  _call: DeleteMyAccountCall;

  constructor(call: DeleteMyAccountCall) {
    this._call = call;
  }
}

export class DeleteMyAccountCall__Outputs {
  _call: DeleteMyAccountCall;

  constructor(call: DeleteMyAccountCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetAccountCall extends ethereum.Call {
  get inputs(): SetAccountCall__Inputs {
    return new SetAccountCall__Inputs(this);
  }

  get outputs(): SetAccountCall__Outputs {
    return new SetAccountCall__Outputs(this);
  }
}

export class SetAccountCall__Inputs {
  _call: SetAccountCall;

  constructor(call: SetAccountCall) {
    this._call = call;
  }

  get _userName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetAccountCall__Outputs {
  _call: SetAccountCall;

  constructor(call: SetAccountCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
